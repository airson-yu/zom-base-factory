<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zom.common.dao.mapper.TechCategoryMapper">

	<!-- @author yuronghua-airson @template 2019.08.02 v11.0 @organization Zero One More, Inc. http://www.01more.com @time 2019-12-13 17:56:27 -->

	<!--====================================== 设置开始-CONFIG_BEGIN ======================================-->
	<sql id="table">tech_category</sql>
	<!-- 所有基础字段 -->
    <sql id="baseColumns">A.id AS id,A.parent_id AS parentId,A.category_name AS categoryName,A.priority AS priority,A.state AS state,A.create_user_id AS createUserId,A.create_user_name AS createUserName,A.create_time AS createTime,A.update_user_id AS updateUserId,A.update_user_name AS updateUserName,A.update_time AS updateTime</sql>
	<!-- 分组  -->
	<sql id="groupBy">
		<if test="groupBy != null and groupBy !='' "> GROUP BY ${groupBy,jdbcType=VARCHAR} </if>
	</sql>
	<!-- 排序  -->
	<sql id="orderBy">
		<if test="orderBy != null and orderBy !='' ">
			<if test="selfOrder == null">ORDER BY A.${orderBy}</if>
			<if test="selfOrder != null">ORDER BY ${orderBy}</if>
		</if>
		<if test="ascOrDesc != null and ascOrDesc !='' and selfOrder == null "> ${ascOrDesc}</if>
		<if test="orderBy == null and ascOrDesc == null "> ORDER BY A.id DESC</if>
	</sql>
	<!-- 分页 -->
	<sql id="limitCount">
		<if test="count != null and count !='' "> LIMIT ${start},${count}</if>
	</sql>
	<!--====================================== 设置结束-CONFIG_FINISH ======================================-->


	<!--=@@@@@@============================= 自定义内容 开始 _@CAUTION_SELF_BEGIN@_ =============================@@@@@@=-->
	<sql id="joinColumns"></sql>
	<sql id="baseSearch"></sql>
	<sql id="joinSearch"></sql>
	<sql id="leftJoin"></sql>
	<!--=@@@@@@============================= 自定义内容 结束 _@CAUTION_SELF_FINISH@_ =============================@@@@@@=-->


	<!--====================================== 查询开始-SELECT_BEGIN ======================================-->
	<select id="load" parameterType="java.lang.Long" resultType="com.zom.common.dao.po.TechCategory">
		SELECT <include refid="baseColumns"/> FROM <include refid="table"/> A WHERE A.id = #{id,jdbcType=BIGINT}
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.Long" resultType="com.zom.common.dao.po.TechCategory">
		SELECT <include refid="baseColumns"/> FROM <include refid="table"/> A WHERE A.id = #{id,jdbcType=BIGINT}
	</select>

	<select id="selectByCondition" parameterType="java.util.Map" resultType="com.zom.common.dao.po.TechCategory">
    	SELECT <include refid="baseColumns"/> <include refid="joinColumns"/> FROM <include refid="table"/> A <include refid="leftJoin"/> <where> <include refid="baseSearch"/> <include refid="joinSearch"/> </where> <include refid="orderBy"/> LIMIT 0,1
	</select>

	<select id="selectListByCondition" parameterType="java.util.Map" resultType="com.zom.common.dao.po.TechCategory">
    	SELECT <include refid="baseColumns"/> <include refid="joinColumns"/> FROM <include refid="table"/> A <include refid="leftJoin"/> <where> <include refid="baseSearch"/> <include refid="joinSearch"/> </where> <include refid="orderBy"/> <include refid="limitCount"/>
	</select>

	<select id="selectCountByCondition" parameterType="java.util.Map" resultType="long">
		SELECT COUNT(*) FROM <include refid="table"/> A <include refid="leftJoin"/> <where> <include refid="baseSearch"/> <include refid="joinSearch"/> </where>
	</select>
	<!--====================================== 查询结束-SELECT_FINISH ======================================-->

	<!--====================================== 修改开始-UPDATE_BEGIN ======================================-->
	<!-- <-#-if cMap_has_next>,</-#-if> -->
	<update id="updateByPrimaryKey" parameterType="com.zom.common.dao.po.TechCategory">
	    UPDATE <include refid="table"/>
		<set>parent_id = #{parentId,jdbcType=BIGINT},category_name = #{categoryName,jdbcType=VARCHAR},priority = #{priority,jdbcType=INTEGER},state = #{state,jdbcType=INTEGER},create_user_id = #{createUserId,jdbcType=BIGINT},create_user_name = #{createUserName,jdbcType=VARCHAR},create_time = #{createTime,jdbcType=TIMESTAMP},update_user_id = #{updateUserId,jdbcType=BIGINT},update_user_name = #{updateUserName,jdbcType=VARCHAR},update_time = #{updateTime,jdbcType=TIMESTAMP},</set>
	    WHERE id = #{id,jdbcType=BIGINT}
	</update>

	<update id="updateByPrimaryKeySelective" parameterType="com.zom.common.dao.po.TechCategory">
	    UPDATE <include refid="table"/>
		<set><if test="parentId != null">parent_id = #{parentId,jdbcType=BIGINT},</if><if test="categoryName != null">category_name = #{categoryName,jdbcType=VARCHAR},</if><if test="priority != null">priority = #{priority,jdbcType=INTEGER},</if><if test="state != null">state = #{state,jdbcType=INTEGER},</if><if test="createUserId != null">create_user_id = #{createUserId,jdbcType=BIGINT},</if><if test="createUserName != null">create_user_name = #{createUserName,jdbcType=VARCHAR},</if><if test="createTime != null">create_time = #{createTime,jdbcType=TIMESTAMP},</if><if test="updateUserId != null">update_user_id = #{updateUserId,jdbcType=BIGINT},</if><if test="updateUserName != null">update_user_name = #{updateUserName,jdbcType=VARCHAR},</if><if test="updateTime != null">update_time = #{updateTime,jdbcType=TIMESTAMP},</if></set>
	    WHERE id = #{id,jdbcType=BIGINT}
	</update>
    <!--====================================== 修改结束-UPDATE_FINISH ======================================-->

	<!--====================================== 新增开始-INSERT_BEGIN ======================================-->
	<insert id="insert" parameterType="com.zom.common.dao.po.TechCategory" useGeneratedKeys="true" keyProperty="id">
	    INSERT INTO <include refid="table"/>(parent_id,category_name,priority,state,create_user_id,create_user_name,create_time,update_user_id,update_user_name,update_time)
	    VALUES( #{parentId,jdbcType=BIGINT},#{categoryName,jdbcType=VARCHAR},#{priority,jdbcType=INTEGER},#{state,jdbcType=INTEGER},#{createUserId,jdbcType=BIGINT},#{createUserName,jdbcType=VARCHAR},#{createTime,jdbcType=TIMESTAMP},#{updateUserId,jdbcType=BIGINT},#{updateUserName,jdbcType=VARCHAR},#{updateTime,jdbcType=TIMESTAMP})
	</insert>

	<insert id="insertSelective" parameterType="com.zom.common.dao.po.TechCategory" useGeneratedKeys="true" keyProperty="id">
	    INSERT INTO <include refid="table"/>
		<trim prefix="(" suffix=")" suffixOverrides=","> <if test="parentId != null"> parent_id,</if><if test="categoryName != null"> category_name,</if><if test="priority != null"> priority,</if><if test="state != null"> state,</if><if test="createUserId != null"> create_user_id,</if><if test="createUserName != null"> create_user_name,</if><if test="createTime != null"> create_time,</if><if test="updateUserId != null"> update_user_id,</if><if test="updateUserName != null"> update_user_name,</if><if test="updateTime != null"> update_time,</if></trim>
		<trim prefix="values (" suffix=")" suffixOverrides=","><if test="parentId != null">#{parentId,jdbcType=BIGINT},</if><if test="categoryName != null">#{categoryName,jdbcType=VARCHAR},</if><if test="priority != null">#{priority,jdbcType=INTEGER},</if><if test="state != null">#{state,jdbcType=INTEGER},</if><if test="createUserId != null">#{createUserId,jdbcType=BIGINT},</if><if test="createUserName != null">#{createUserName,jdbcType=VARCHAR},</if><if test="createTime != null">#{createTime,jdbcType=TIMESTAMP},</if><if test="updateUserId != null">#{updateUserId,jdbcType=BIGINT},</if><if test="updateUserName != null">#{updateUserName,jdbcType=VARCHAR},</if><if test="updateTime != null">#{updateTime,jdbcType=TIMESTAMP},</if></trim>
	</insert>

	<insert id="insertBatch">
		INSERT INTO <include refid="table"/>(parent_id,category_name,priority,state,create_user_id,create_user_name,create_time,update_user_id,update_user_name,update_time)
		VALUES <foreach collection="list" item="c" separator=",">(#{c.parentId,jdbcType=BIGINT},#{c.categoryName,jdbcType=VARCHAR},#{c.priority,jdbcType=INTEGER},#{c.state,jdbcType=INTEGER},#{c.createUserId,jdbcType=BIGINT},#{c.createUserName,jdbcType=VARCHAR},#{c.createTime,jdbcType=TIMESTAMP},#{c.updateUserId,jdbcType=BIGINT},#{c.updateUserName,jdbcType=VARCHAR},#{c.updateTime,jdbcType=TIMESTAMP})</foreach>
	</insert>
  	<!--====================================== 新增结束-INSERT_FINISH ======================================-->

	<!--====================================== 删除开始-DELETE_BEGIN ======================================-->
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
	    DELETE FROM <include refid="table"/> WHERE id = #{id,jdbcType=BIGINT}
	</delete>
	<!--====================================== 删除结束-DELETE_FINISH ======================================-->

</mapper>