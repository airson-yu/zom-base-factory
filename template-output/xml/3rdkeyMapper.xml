<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zom.common.dao.mapper.3rdkeyMapper">

	<!-- @author yuronghua-airson @template 2019.08.02 v11.0 @organization Zero One More, Inc. http://www.01more.com @time 2021-01-18 17:04:24 -->

	<!--====================================== 设置开始-CONFIG_BEGIN ======================================-->
	<sql id="table">rtv_3rdkey</sql>
	<!-- 所有基础字段 -->
    <sql id="baseColumns">A.id AS id,A.api_key AS apiKey,A.security_key AS securityKey,A.corp_id AS corpId,A.home AS home,A.extjson AS extjson,A.platform_name AS platformName,A.platform_code AS platformCode,A.expire_time AS expireTime,A.state AS state,A.auth_level AS authLevel,A.allow_apis AS allowApis,A.remark AS remark,A.update_time AS updateTime</sql>
	<!-- 分组  -->
	<sql id="groupBy">
		<if test="groupBy != null and groupBy !='' "> GROUP BY ${groupBy,jdbcType=VARCHAR} </if>
	</sql>
	<!-- 排序  -->
	<sql id="orderBy">
		<if test="orderBy != null and orderBy !='' ">
			<if test="selfOrder == null">ORDER BY A.${orderBy}</if>
			<if test="selfOrder != null">ORDER BY ${orderBy}</if>
		</if>
		<if test="ascOrDesc != null and ascOrDesc !='' and selfOrder == null "> ${ascOrDesc}</if>
		<if test="orderBy == null and ascOrDesc == null "> ORDER BY A.id DESC</if>
	</sql>
	<!-- 分页 -->
	<sql id="limitCount">
		<if test="count != null and count !='' "> LIMIT ${start},${count}</if>
	</sql>
	<!--====================================== 设置结束-CONFIG_FINISH ======================================-->


	<!--=@@@@@@============================= 自定义内容 开始 _@CAUTION_SELF_BEGIN@_ =============================@@@@@@=-->
	<sql id="joinColumns"></sql>
	<sql id="baseSearch"></sql>
	<sql id="joinSearch"></sql>
	<sql id="leftJoin"></sql>
	<!--=@@@@@@============================= 自定义内容 结束 _@CAUTION_SELF_FINISH@_ =============================@@@@@@=-->


	<!--====================================== 查询开始-SELECT_BEGIN ======================================-->
	<select id="load" parameterType="java.lang.Long" resultType="com.zom.common.dao.po.3rdkey">
		SELECT <include refid="baseColumns"/> FROM <include refid="table"/> A WHERE A.id = #{id,jdbcType=BIGINT}
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.Long" resultType="com.zom.common.dao.po.3rdkey">
		SELECT <include refid="baseColumns"/> FROM <include refid="table"/> A WHERE A.id = #{id,jdbcType=BIGINT}
	</select>

	<select id="selectByCondition" parameterType="java.util.Map" resultType="com.zom.common.dao.po.3rdkey">
    	SELECT <include refid="baseColumns"/> <include refid="joinColumns"/> FROM <include refid="table"/> A <include refid="leftJoin"/> <where> <include refid="baseSearch"/> <include refid="joinSearch"/> </where> <include refid="orderBy"/> LIMIT 0,1
	</select>

	<select id="selectListByCondition" parameterType="java.util.Map" resultType="com.zom.common.dao.po.3rdkey">
    	SELECT <include refid="baseColumns"/> <include refid="joinColumns"/> FROM <include refid="table"/> A <include refid="leftJoin"/> <where> <include refid="baseSearch"/> <include refid="joinSearch"/> </where> <include refid="orderBy"/> <include refid="limitCount"/>
	</select>

	<select id="selectCountByCondition" parameterType="java.util.Map" resultType="long">
		SELECT COUNT(*) FROM <include refid="table"/> A <include refid="leftJoin"/> <where> <include refid="baseSearch"/> <include refid="joinSearch"/> </where>
	</select>
	<!--====================================== 查询结束-SELECT_FINISH ======================================-->

	<!--====================================== 修改开始-UPDATE_BEGIN ======================================-->
	<!-- <-#-if cMap_has_next>,</-#-if> -->
	<update id="updateByPrimaryKey" parameterType="com.zom.common.dao.po.3rdkey">
	    UPDATE <include refid="table"/>
		<set>api_key = #{apiKey,jdbcType=VARCHAR},security_key = #{securityKey,jdbcType=VARCHAR},corp_id = #{corpId,jdbcType=INTEGER},home = #{home,jdbcType=VARCHAR},extjson = #{extjson,jdbcType=VARCHAR},platform_name = #{platformName,jdbcType=VARCHAR},platform_code = #{platformCode,jdbcType=VARCHAR},expire_time = #{expireTime,jdbcType=TIMESTAMP},state = #{state,jdbcType=INTEGER},auth_level = #{authLevel,jdbcType=INTEGER},allow_apis = #{allowApis,jdbcType=VARCHAR},remark = #{remark,jdbcType=VARCHAR},update_time = #{updateTime,jdbcType=TIMESTAMP},</set>
	    WHERE id = #{id,jdbcType=BIGINT}
	</update>

	<update id="updateByPrimaryKeySelective" parameterType="com.zom.common.dao.po.3rdkey">
	    UPDATE <include refid="table"/>
		<set><if test="apiKey != null">api_key = #{apiKey,jdbcType=VARCHAR},</if><if test="securityKey != null">security_key = #{securityKey,jdbcType=VARCHAR},</if><if test="corpId != null">corp_id = #{corpId,jdbcType=INTEGER},</if><if test="home != null">home = #{home,jdbcType=VARCHAR},</if><if test="extjson != null">extjson = #{extjson,jdbcType=VARCHAR},</if><if test="platformName != null">platform_name = #{platformName,jdbcType=VARCHAR},</if><if test="platformCode != null">platform_code = #{platformCode,jdbcType=VARCHAR},</if><if test="expireTime != null">expire_time = #{expireTime,jdbcType=TIMESTAMP},</if><if test="state != null">state = #{state,jdbcType=INTEGER},</if><if test="authLevel != null">auth_level = #{authLevel,jdbcType=INTEGER},</if><if test="allowApis != null">allow_apis = #{allowApis,jdbcType=VARCHAR},</if><if test="remark != null">remark = #{remark,jdbcType=VARCHAR},</if><if test="updateTime != null">update_time = #{updateTime,jdbcType=TIMESTAMP},</if></set>
	    WHERE id = #{id,jdbcType=BIGINT}
	</update>
    <!--====================================== 修改结束-UPDATE_FINISH ======================================-->

	<!--====================================== 新增开始-INSERT_BEGIN ======================================-->
	<insert id="insert" parameterType="com.zom.common.dao.po.3rdkey" useGeneratedKeys="true" keyProperty="id">
	    INSERT INTO <include refid="table"/>(api_key,security_key,corp_id,home,extjson,platform_name,platform_code,expire_time,state,auth_level,allow_apis,remark,update_time)
	    VALUES( #{apiKey,jdbcType=VARCHAR},#{securityKey,jdbcType=VARCHAR},#{corpId,jdbcType=INTEGER},#{home,jdbcType=VARCHAR},#{extjson,jdbcType=VARCHAR},#{platformName,jdbcType=VARCHAR},#{platformCode,jdbcType=VARCHAR},#{expireTime,jdbcType=TIMESTAMP},#{state,jdbcType=INTEGER},#{authLevel,jdbcType=INTEGER},#{allowApis,jdbcType=VARCHAR},#{remark,jdbcType=VARCHAR},#{updateTime,jdbcType=TIMESTAMP})
	</insert>

	<insert id="insertSelective" parameterType="com.zom.common.dao.po.3rdkey" useGeneratedKeys="true" keyProperty="id">
	    INSERT INTO <include refid="table"/>
		<trim prefix="(" suffix=")" suffixOverrides=","> <if test="apiKey != null"> api_key,</if><if test="securityKey != null"> security_key,</if><if test="corpId != null"> corp_id,</if><if test="home != null"> home,</if><if test="extjson != null"> extjson,</if><if test="platformName != null"> platform_name,</if><if test="platformCode != null"> platform_code,</if><if test="expireTime != null"> expire_time,</if><if test="state != null"> state,</if><if test="authLevel != null"> auth_level,</if><if test="allowApis != null"> allow_apis,</if><if test="remark != null"> remark,</if><if test="updateTime != null"> update_time,</if></trim>
		<trim prefix="values (" suffix=")" suffixOverrides=","><if test="apiKey != null">#{apiKey,jdbcType=VARCHAR},</if><if test="securityKey != null">#{securityKey,jdbcType=VARCHAR},</if><if test="corpId != null">#{corpId,jdbcType=INTEGER},</if><if test="home != null">#{home,jdbcType=VARCHAR},</if><if test="extjson != null">#{extjson,jdbcType=VARCHAR},</if><if test="platformName != null">#{platformName,jdbcType=VARCHAR},</if><if test="platformCode != null">#{platformCode,jdbcType=VARCHAR},</if><if test="expireTime != null">#{expireTime,jdbcType=TIMESTAMP},</if><if test="state != null">#{state,jdbcType=INTEGER},</if><if test="authLevel != null">#{authLevel,jdbcType=INTEGER},</if><if test="allowApis != null">#{allowApis,jdbcType=VARCHAR},</if><if test="remark != null">#{remark,jdbcType=VARCHAR},</if><if test="updateTime != null">#{updateTime,jdbcType=TIMESTAMP},</if></trim>
	</insert>

	<insert id="insertBatch" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO <include refid="table"/>(api_key,security_key,corp_id,home,extjson,platform_name,platform_code,expire_time,state,auth_level,allow_apis,remark,update_time)
		VALUES <foreach collection="list" item="c" separator=",">(#{c.apiKey,jdbcType=VARCHAR},#{c.securityKey,jdbcType=VARCHAR},#{c.corpId,jdbcType=INTEGER},#{c.home,jdbcType=VARCHAR},#{c.extjson,jdbcType=VARCHAR},#{c.platformName,jdbcType=VARCHAR},#{c.platformCode,jdbcType=VARCHAR},#{c.expireTime,jdbcType=TIMESTAMP},#{c.state,jdbcType=INTEGER},#{c.authLevel,jdbcType=INTEGER},#{c.allowApis,jdbcType=VARCHAR},#{c.remark,jdbcType=VARCHAR},#{c.updateTime,jdbcType=TIMESTAMP})</foreach>
	</insert>
  	<!--====================================== 新增结束-INSERT_FINISH ======================================-->

	<!--====================================== 删除开始-DELETE_BEGIN ======================================-->
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
	    DELETE FROM <include refid="table"/> WHERE id = #{id,jdbcType=BIGINT}
	</delete>
	<!--====================================== 删除结束-DELETE_FINISH ======================================-->

</mapper>