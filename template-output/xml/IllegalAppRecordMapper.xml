<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zom.common.dao.mapper.IllegalAppRecordMapper">

	<!-- @author yuronghua-airson @template 2019.08.02 v11.0 @organization Zero One More, Inc. http://www.01more.com @time 2019-12-11 15:42:59 -->

	<!--====================================== 设置开始-CONFIG_BEGIN ======================================-->
	<sql id="table">rtv_illegal_app_record</sql>
	<!-- 所有基础字段 -->
    <sql id="baseColumns">A.id AS id,A.uid AS uid,A.aname AS aname,A.idate AS idate,A.udate AS udate,A.status AS status,A.corp_id AS corpId,A.inreport_date AS inreportDate,A.unreport_date AS unreportDate,A.label AS label,A.device AS device</sql>
	<!-- 分组  -->
	<sql id="groupBy">
		<if test="groupBy != null and groupBy !='' "> GROUP BY ${groupBy,jdbcType=VARCHAR} </if>
	</sql>
	<!-- 排序  -->
	<sql id="orderBy">
		<if test="orderBy != null and orderBy !='' ">
			<if test="selfOrder == null">ORDER BY A.${orderBy}</if>
			<if test="selfOrder != null">ORDER BY ${orderBy}</if>
		</if>
		<if test="ascOrDesc != null and ascOrDesc !='' and selfOrder == null "> ${ascOrDesc}</if>
		<if test="orderBy == null and ascOrDesc == null "> ORDER BY A.id DESC</if>
	</sql>
	<!-- 分页 -->
	<sql id="limitCount">
		<if test="count != null and count !='' "> LIMIT ${start},${count}</if>
	</sql>
	<!--====================================== 设置结束-CONFIG_FINISH ======================================-->


	<!--=@@@@@@============================= 自定义内容 开始 _@CAUTION_SELF_BEGIN@_ =============================@@@@@@=-->
	<sql id="joinColumns"></sql>
	<sql id="baseSearch"></sql>
	<sql id="joinSearch"></sql>
	<sql id="leftJoin"></sql>
	<!--=@@@@@@============================= 自定义内容 结束 _@CAUTION_SELF_FINISH@_ =============================@@@@@@=-->


	<!--====================================== 查询开始-SELECT_BEGIN ======================================-->
	<select id="load" parameterType="java.lang.Long" resultType="com.zom.common.dao.po.IllegalAppRecord">
		SELECT <include refid="baseColumns"/> FROM <include refid="table"/> A WHERE A.id = #{id,jdbcType=BIGINT}
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.Long" resultType="com.zom.common.dao.po.IllegalAppRecord">
		SELECT <include refid="baseColumns"/> FROM <include refid="table"/> A WHERE A.id = #{id,jdbcType=BIGINT}
	</select>

	<select id="selectByCondition" parameterType="java.util.Map" resultType="com.zom.common.dao.po.IllegalAppRecord">
    	SELECT <include refid="baseColumns"/> <include refid="joinColumns"/> FROM <include refid="table"/> A <include refid="leftJoin"/> <where> <include refid="baseSearch"/> <include refid="joinSearch"/> </where> <include refid="orderBy"/> LIMIT 0,1
	</select>

	<select id="selectListByCondition" parameterType="java.util.Map" resultType="com.zom.common.dao.po.IllegalAppRecord">
    	SELECT <include refid="baseColumns"/> <include refid="joinColumns"/> FROM <include refid="table"/> A <include refid="leftJoin"/> <where> <include refid="baseSearch"/> <include refid="joinSearch"/> </where> <include refid="orderBy"/> <include refid="limitCount"/>
	</select>

	<select id="selectCountByCondition" parameterType="java.util.Map" resultType="long">
		SELECT COUNT(*) FROM <include refid="table"/> A <include refid="leftJoin"/> <where> <include refid="baseSearch"/> <include refid="joinSearch"/> </where>
	</select>
	<!--====================================== 查询结束-SELECT_FINISH ======================================-->

	<!--====================================== 修改开始-UPDATE_BEGIN ======================================-->
	<!-- <-#-if cMap_has_next>,</-#-if> -->
	<update id="updateByPrimaryKey" parameterType="com.zom.common.dao.po.IllegalAppRecord">
	    UPDATE <include refid="table"/>
		<set>uid = #{uid,jdbcType=BIGINT},aname = #{aname,jdbcType=VARCHAR},idate = #{idate,jdbcType=TIMESTAMP},udate = #{udate,jdbcType=TIMESTAMP},status = #{status,jdbcType=INTEGER},corp_id = #{corpId,jdbcType=INTEGER},inreport_date = #{inreportDate,jdbcType=TIMESTAMP},unreport_date = #{unreportDate,jdbcType=TIMESTAMP},label = #{label,jdbcType=VARCHAR},device = #{device,jdbcType=VARCHAR},</set>
	    WHERE id = #{id,jdbcType=BIGINT}
	</update>

	<update id="updateByPrimaryKeySelective" parameterType="com.zom.common.dao.po.IllegalAppRecord">
	    UPDATE <include refid="table"/>
		<set><if test="uid != null">uid = #{uid,jdbcType=BIGINT},</if><if test="aname != null">aname = #{aname,jdbcType=VARCHAR},</if><if test="idate != null">idate = #{idate,jdbcType=TIMESTAMP},</if><if test="udate != null">udate = #{udate,jdbcType=TIMESTAMP},</if><if test="status != null">status = #{status,jdbcType=INTEGER},</if><if test="corpId != null">corp_id = #{corpId,jdbcType=INTEGER},</if><if test="inreportDate != null">inreport_date = #{inreportDate,jdbcType=TIMESTAMP},</if><if test="unreportDate != null">unreport_date = #{unreportDate,jdbcType=TIMESTAMP},</if><if test="label != null">label = #{label,jdbcType=VARCHAR},</if><if test="device != null">device = #{device,jdbcType=VARCHAR},</if></set>
	    WHERE id = #{id,jdbcType=BIGINT}
	</update>
    <!--====================================== 修改结束-UPDATE_FINISH ======================================-->

	<!--====================================== 新增开始-INSERT_BEGIN ======================================-->
	<insert id="insert" parameterType="com.zom.common.dao.po.IllegalAppRecord" useGeneratedKeys="true" keyProperty="id">
	    INSERT INTO <include refid="table"/>(uid,aname,idate,udate,status,corp_id,inreport_date,unreport_date,label,device)
	    VALUES( #{uid,jdbcType=BIGINT},#{aname,jdbcType=VARCHAR},#{idate,jdbcType=TIMESTAMP},#{udate,jdbcType=TIMESTAMP},#{status,jdbcType=INTEGER},#{corpId,jdbcType=INTEGER},#{inreportDate,jdbcType=TIMESTAMP},#{unreportDate,jdbcType=TIMESTAMP},#{label,jdbcType=VARCHAR},#{device,jdbcType=VARCHAR})
	</insert>

	<insert id="insertSelective" parameterType="com.zom.common.dao.po.IllegalAppRecord" useGeneratedKeys="true" keyProperty="id">
	    INSERT INTO <include refid="table"/>
		<trim prefix="(" suffix=")" suffixOverrides=","> <if test="uid != null"> uid,</if><if test="aname != null"> aname,</if><if test="idate != null"> idate,</if><if test="udate != null"> udate,</if><if test="status != null"> status,</if><if test="corpId != null"> corp_id,</if><if test="inreportDate != null"> inreport_date,</if><if test="unreportDate != null"> unreport_date,</if><if test="label != null"> label,</if><if test="device != null"> device,</if></trim>
		<trim prefix="values (" suffix=")" suffixOverrides=","><if test="uid != null">#{uid,jdbcType=BIGINT},</if><if test="aname != null">#{aname,jdbcType=VARCHAR},</if><if test="idate != null">#{idate,jdbcType=TIMESTAMP},</if><if test="udate != null">#{udate,jdbcType=TIMESTAMP},</if><if test="status != null">#{status,jdbcType=INTEGER},</if><if test="corpId != null">#{corpId,jdbcType=INTEGER},</if><if test="inreportDate != null">#{inreportDate,jdbcType=TIMESTAMP},</if><if test="unreportDate != null">#{unreportDate,jdbcType=TIMESTAMP},</if><if test="label != null">#{label,jdbcType=VARCHAR},</if><if test="device != null">#{device,jdbcType=VARCHAR},</if></trim>
	</insert>

	<insert id="insertBatch">
		INSERT INTO <include refid="table"/>(uid,aname,idate,udate,status,corp_id,inreport_date,unreport_date,label,device)
		VALUES <foreach collection="list" item="c" separator=",">(#{c.uid,jdbcType=BIGINT},#{c.aname,jdbcType=VARCHAR},#{c.idate,jdbcType=TIMESTAMP},#{c.udate,jdbcType=TIMESTAMP},#{c.status,jdbcType=INTEGER},#{c.corpId,jdbcType=INTEGER},#{c.inreportDate,jdbcType=TIMESTAMP},#{c.unreportDate,jdbcType=TIMESTAMP},#{c.label,jdbcType=VARCHAR},#{c.device,jdbcType=VARCHAR})</foreach>
	</insert>
  	<!--====================================== 新增结束-INSERT_FINISH ======================================-->

	<!--====================================== 删除开始-DELETE_BEGIN ======================================-->
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
	    DELETE FROM <include refid="table"/> WHERE id = #{id,jdbcType=BIGINT}
	</delete>
	<!--====================================== 删除结束-DELETE_FINISH ======================================-->

</mapper>