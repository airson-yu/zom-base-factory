<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zom.common.dao.mapper.CorpMapper">

	<!-- @author yuronghua-airson @template 2019.08.02 v11.0 @organization Zero One More, Inc. http://www.01more.com @time 2020-09-28 15:33:53 -->

	<!--====================================== 设置开始-CONFIG_BEGIN ======================================-->
	<sql id="table">rtv_corp</sql>
	<!-- 所有基础字段 -->
    <sql id="baseColumns">A.id AS id,A.`code` AS `code`,A.logon_name AS logonName,A.corp_name AS corpName,A.corp_password AS corpPassword,A.`level` AS `level`,A.register_date AS registerDate,A.expire_date AS expireDate,A.state AS state,A.email AS email,A.phone AS phone,A.last_logon_date AS lastLogonDate,A.last_logon_ip AS lastLogonIp,A.expire_operation AS expireOperation,A.expire_way AS expireWay,A.max_user AS maxUser,A.device_types AS deviceTypes,A.update_time AS updateTime</sql>
	<!-- 分组  -->
	<sql id="groupBy">
		<if test="groupBy != null and groupBy !='' "> GROUP BY ${groupBy,jdbcType=VARCHAR} </if>
	</sql>
	<!-- 排序  -->
	<sql id="orderBy">
		<if test="orderBy != null and orderBy !='' ">
			<if test="selfOrder == null">ORDER BY A.${orderBy}</if>
			<if test="selfOrder != null">ORDER BY ${orderBy}</if>
		</if>
		<if test="ascOrDesc != null and ascOrDesc !='' and selfOrder == null "> ${ascOrDesc}</if>
		<if test="orderBy == null and ascOrDesc == null "> ORDER BY A.id DESC</if>
	</sql>
	<!-- 分页 -->
	<sql id="limitCount">
		<if test="count != null and count !='' "> LIMIT ${start},${count}</if>
	</sql>
	<!--====================================== 设置结束-CONFIG_FINISH ======================================-->


	<!--=@@@@@@============================= 自定义内容 开始 _@CAUTION_SELF_BEGIN@_ =============================@@@@@@=-->
	<sql id="joinColumns"></sql>
	<sql id="baseSearch"></sql>
	<sql id="joinSearch"></sql>
	<sql id="leftJoin"></sql>
	<!--=@@@@@@============================= 自定义内容 结束 _@CAUTION_SELF_FINISH@_ =============================@@@@@@=-->


	<!--====================================== 查询开始-SELECT_BEGIN ======================================-->
	<select id="load" parameterType="java.lang.Long" resultType="com.zom.common.dao.po.Corp">
		SELECT <include refid="baseColumns"/> FROM <include refid="table"/> A WHERE A.id = #{id,jdbcType=BIGINT}
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.Long" resultType="com.zom.common.dao.po.Corp">
		SELECT <include refid="baseColumns"/> FROM <include refid="table"/> A WHERE A.id = #{id,jdbcType=BIGINT}
	</select>

	<select id="selectByCondition" parameterType="java.util.Map" resultType="com.zom.common.dao.po.Corp">
    	SELECT <include refid="baseColumns"/> <include refid="joinColumns"/> FROM <include refid="table"/> A <include refid="leftJoin"/> <where> <include refid="baseSearch"/> <include refid="joinSearch"/> </where> <include refid="orderBy"/> LIMIT 0,1
	</select>

	<select id="selectListByCondition" parameterType="java.util.Map" resultType="com.zom.common.dao.po.Corp">
    	SELECT <include refid="baseColumns"/> <include refid="joinColumns"/> FROM <include refid="table"/> A <include refid="leftJoin"/> <where> <include refid="baseSearch"/> <include refid="joinSearch"/> </where> <include refid="orderBy"/> <include refid="limitCount"/>
	</select>

	<select id="selectCountByCondition" parameterType="java.util.Map" resultType="long">
		SELECT COUNT(*) FROM <include refid="table"/> A <include refid="leftJoin"/> <where> <include refid="baseSearch"/> <include refid="joinSearch"/> </where>
	</select>
	<!--====================================== 查询结束-SELECT_FINISH ======================================-->

	<!--====================================== 修改开始-UPDATE_BEGIN ======================================-->
	<!-- <-#-if cMap_has_next>,</-#-if> -->
	<update id="updateByPrimaryKey" parameterType="com.zom.common.dao.po.Corp">
	    UPDATE <include refid="table"/>
		<set>`code` = #{code,jdbcType=VARCHAR},logon_name = #{logonName,jdbcType=VARCHAR},corp_name = #{corpName,jdbcType=VARCHAR},corp_password = #{corpPassword,jdbcType=VARCHAR},`level` = #{level,jdbcType=INTEGER},register_date = #{registerDate,jdbcType=TIMESTAMP},expire_date = #{expireDate,jdbcType=TIMESTAMP},state = #{state,jdbcType=INTEGER},email = #{email,jdbcType=VARCHAR},phone = #{phone,jdbcType=VARCHAR},last_logon_date = #{lastLogonDate,jdbcType=TIMESTAMP},last_logon_ip = #{lastLogonIp,jdbcType=VARCHAR},expire_operation = #{expireOperation,jdbcType=INTEGER},expire_way = #{expireWay,jdbcType=INTEGER},max_user = #{maxUser,jdbcType=INTEGER},device_types = #{deviceTypes,jdbcType=VARCHAR},update_time = #{updateTime,jdbcType=TIMESTAMP},</set>
	    WHERE id = #{id,jdbcType=BIGINT}
	</update>

	<update id="updateByPrimaryKeySelective" parameterType="com.zom.common.dao.po.Corp">
	    UPDATE <include refid="table"/>
		<set><if test="code != null">`code` = #{code,jdbcType=VARCHAR},</if><if test="logonName != null">logon_name = #{logonName,jdbcType=VARCHAR},</if><if test="corpName != null">corp_name = #{corpName,jdbcType=VARCHAR},</if><if test="corpPassword != null">corp_password = #{corpPassword,jdbcType=VARCHAR},</if><if test="level != null">`level` = #{level,jdbcType=INTEGER},</if><if test="registerDate != null">register_date = #{registerDate,jdbcType=TIMESTAMP},</if><if test="expireDate != null">expire_date = #{expireDate,jdbcType=TIMESTAMP},</if><if test="state != null">state = #{state,jdbcType=INTEGER},</if><if test="email != null">email = #{email,jdbcType=VARCHAR},</if><if test="phone != null">phone = #{phone,jdbcType=VARCHAR},</if><if test="lastLogonDate != null">last_logon_date = #{lastLogonDate,jdbcType=TIMESTAMP},</if><if test="lastLogonIp != null">last_logon_ip = #{lastLogonIp,jdbcType=VARCHAR},</if><if test="expireOperation != null">expire_operation = #{expireOperation,jdbcType=INTEGER},</if><if test="expireWay != null">expire_way = #{expireWay,jdbcType=INTEGER},</if><if test="maxUser != null">max_user = #{maxUser,jdbcType=INTEGER},</if><if test="deviceTypes != null">device_types = #{deviceTypes,jdbcType=VARCHAR},</if><if test="updateTime != null">update_time = #{updateTime,jdbcType=TIMESTAMP},</if></set>
	    WHERE id = #{id,jdbcType=BIGINT}
	</update>
    <!--====================================== 修改结束-UPDATE_FINISH ======================================-->

	<!--====================================== 新增开始-INSERT_BEGIN ======================================-->
	<insert id="insert" parameterType="com.zom.common.dao.po.Corp" useGeneratedKeys="true" keyProperty="id">
	    INSERT INTO <include refid="table"/>(`code`,logon_name,corp_name,corp_password,`level`,register_date,expire_date,state,email,phone,last_logon_date,last_logon_ip,expire_operation,expire_way,max_user,device_types,update_time)
	    VALUES( #{code,jdbcType=VARCHAR},#{logonName,jdbcType=VARCHAR},#{corpName,jdbcType=VARCHAR},#{corpPassword,jdbcType=VARCHAR},#{level,jdbcType=INTEGER},#{registerDate,jdbcType=TIMESTAMP},#{expireDate,jdbcType=TIMESTAMP},#{state,jdbcType=INTEGER},#{email,jdbcType=VARCHAR},#{phone,jdbcType=VARCHAR},#{lastLogonDate,jdbcType=TIMESTAMP},#{lastLogonIp,jdbcType=VARCHAR},#{expireOperation,jdbcType=INTEGER},#{expireWay,jdbcType=INTEGER},#{maxUser,jdbcType=INTEGER},#{deviceTypes,jdbcType=VARCHAR},#{updateTime,jdbcType=TIMESTAMP})
	</insert>

	<insert id="insertSelective" parameterType="com.zom.common.dao.po.Corp" useGeneratedKeys="true" keyProperty="id">
	    INSERT INTO <include refid="table"/>
		<trim prefix="(" suffix=")" suffixOverrides=","> <if test="code != null"> `code`,</if><if test="logonName != null"> logon_name,</if><if test="corpName != null"> corp_name,</if><if test="corpPassword != null"> corp_password,</if><if test="level != null"> `level`,</if><if test="registerDate != null"> register_date,</if><if test="expireDate != null"> expire_date,</if><if test="state != null"> state,</if><if test="email != null"> email,</if><if test="phone != null"> phone,</if><if test="lastLogonDate != null"> last_logon_date,</if><if test="lastLogonIp != null"> last_logon_ip,</if><if test="expireOperation != null"> expire_operation,</if><if test="expireWay != null"> expire_way,</if><if test="maxUser != null"> max_user,</if><if test="deviceTypes != null"> device_types,</if><if test="updateTime != null"> update_time,</if></trim>
		<trim prefix="values (" suffix=")" suffixOverrides=","><if test="code != null">#{code,jdbcType=VARCHAR},</if><if test="logonName != null">#{logonName,jdbcType=VARCHAR},</if><if test="corpName != null">#{corpName,jdbcType=VARCHAR},</if><if test="corpPassword != null">#{corpPassword,jdbcType=VARCHAR},</if><if test="level != null">#{level,jdbcType=INTEGER},</if><if test="registerDate != null">#{registerDate,jdbcType=TIMESTAMP},</if><if test="expireDate != null">#{expireDate,jdbcType=TIMESTAMP},</if><if test="state != null">#{state,jdbcType=INTEGER},</if><if test="email != null">#{email,jdbcType=VARCHAR},</if><if test="phone != null">#{phone,jdbcType=VARCHAR},</if><if test="lastLogonDate != null">#{lastLogonDate,jdbcType=TIMESTAMP},</if><if test="lastLogonIp != null">#{lastLogonIp,jdbcType=VARCHAR},</if><if test="expireOperation != null">#{expireOperation,jdbcType=INTEGER},</if><if test="expireWay != null">#{expireWay,jdbcType=INTEGER},</if><if test="maxUser != null">#{maxUser,jdbcType=INTEGER},</if><if test="deviceTypes != null">#{deviceTypes,jdbcType=VARCHAR},</if><if test="updateTime != null">#{updateTime,jdbcType=TIMESTAMP},</if></trim>
	</insert>

	<insert id="insertBatch" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO <include refid="table"/>(`code`,logon_name,corp_name,corp_password,`level`,register_date,expire_date,state,email,phone,last_logon_date,last_logon_ip,expire_operation,expire_way,max_user,device_types,update_time)
		VALUES <foreach collection="list" item="c" separator=",">(#{c.code,jdbcType=VARCHAR},#{c.logonName,jdbcType=VARCHAR},#{c.corpName,jdbcType=VARCHAR},#{c.corpPassword,jdbcType=VARCHAR},#{c.level,jdbcType=INTEGER},#{c.registerDate,jdbcType=TIMESTAMP},#{c.expireDate,jdbcType=TIMESTAMP},#{c.state,jdbcType=INTEGER},#{c.email,jdbcType=VARCHAR},#{c.phone,jdbcType=VARCHAR},#{c.lastLogonDate,jdbcType=TIMESTAMP},#{c.lastLogonIp,jdbcType=VARCHAR},#{c.expireOperation,jdbcType=INTEGER},#{c.expireWay,jdbcType=INTEGER},#{c.maxUser,jdbcType=INTEGER},#{c.deviceTypes,jdbcType=VARCHAR},#{c.updateTime,jdbcType=TIMESTAMP})</foreach>
	</insert>
  	<!--====================================== 新增结束-INSERT_FINISH ======================================-->

	<!--====================================== 删除开始-DELETE_BEGIN ======================================-->
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
	    DELETE FROM <include refid="table"/> WHERE id = #{id,jdbcType=BIGINT}
	</delete>
	<!--====================================== 删除结束-DELETE_FINISH ======================================-->

</mapper>