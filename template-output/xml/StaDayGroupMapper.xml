<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zom.common.dao.mapper.StaDayGroupMapper">

	<!-- @author yuronghua-airson @template 2019.08.02 v11.0 @organization Zero One More, Inc. http://www.01more.com @time 2021-01-04 12:10:36 -->

	<!--====================================== 设置开始-CONFIG_BEGIN ======================================-->
	<sql id="table">sta_day_group</sql>
	<!-- 所有基础字段 -->
    <sql id="baseColumns">A.id AS id,A.unique_id AS uniqueId,A.corpid AS corpid,A.link_id AS linkId,A.time_ymd AS timeYmd,A.dept_unique_id AS deptUniqueId,A.dept_name AS deptName,A.group_id AS groupId,A.group_name AS groupName,A.talk_count AS talkCount,A.talk_duration AS talkDuration,A.video_count AS videoCount,A.video_duration AS videoDuration,A.im_count AS imCount,A.state AS state,A.update_time AS updateTime</sql>
	<!-- 分组  -->
	<sql id="groupBy">
		<if test="groupBy != null and groupBy !='' "> GROUP BY ${groupBy,jdbcType=VARCHAR} </if>
	</sql>
	<!-- 排序  -->
	<sql id="orderBy">
		<if test="orderBy != null and orderBy !='' ">
			<if test="selfOrder == null">ORDER BY A.${orderBy}</if>
			<if test="selfOrder != null">ORDER BY ${orderBy}</if>
		</if>
		<if test="ascOrDesc != null and ascOrDesc !='' and selfOrder == null "> ${ascOrDesc}</if>
		<if test="orderBy == null and ascOrDesc == null "> ORDER BY A.id DESC</if>
	</sql>
	<!-- 分页 -->
	<sql id="limitCount">
		<if test="count != null and count !='' "> LIMIT ${start},${count}</if>
	</sql>
	<!--====================================== 设置结束-CONFIG_FINISH ======================================-->


	<!--=@@@@@@============================= 自定义内容 开始 _@CAUTION_SELF_BEGIN@_ =============================@@@@@@=-->
	<sql id="joinColumns"></sql>
	<sql id="baseSearch"></sql>
	<sql id="joinSearch"></sql>
	<sql id="leftJoin"></sql>
	<!--=@@@@@@============================= 自定义内容 结束 _@CAUTION_SELF_FINISH@_ =============================@@@@@@=-->


	<!--====================================== 查询开始-SELECT_BEGIN ======================================-->
	<select id="load" parameterType="java.lang.Long" resultType="com.zom.common.dao.po.StaDayGroup">
		SELECT <include refid="baseColumns"/> FROM <include refid="table"/> A WHERE A.id = #{id,jdbcType=BIGINT}
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.Long" resultType="com.zom.common.dao.po.StaDayGroup">
		SELECT <include refid="baseColumns"/> FROM <include refid="table"/> A WHERE A.id = #{id,jdbcType=BIGINT}
	</select>

	<select id="selectByCondition" parameterType="java.util.Map" resultType="com.zom.common.dao.po.StaDayGroup">
    	SELECT <include refid="baseColumns"/> <include refid="joinColumns"/> FROM <include refid="table"/> A <include refid="leftJoin"/> <where> <include refid="baseSearch"/> <include refid="joinSearch"/> </where> <include refid="orderBy"/> LIMIT 0,1
	</select>

	<select id="selectListByCondition" parameterType="java.util.Map" resultType="com.zom.common.dao.po.StaDayGroup">
    	SELECT <include refid="baseColumns"/> <include refid="joinColumns"/> FROM <include refid="table"/> A <include refid="leftJoin"/> <where> <include refid="baseSearch"/> <include refid="joinSearch"/> </where> <include refid="orderBy"/> <include refid="limitCount"/>
	</select>

	<select id="selectCountByCondition" parameterType="java.util.Map" resultType="long">
		SELECT COUNT(*) FROM <include refid="table"/> A <include refid="leftJoin"/> <where> <include refid="baseSearch"/> <include refid="joinSearch"/> </where>
	</select>
	<!--====================================== 查询结束-SELECT_FINISH ======================================-->

	<!--====================================== 修改开始-UPDATE_BEGIN ======================================-->
	<!-- <-#-if cMap_has_next>,</-#-if> -->
	<update id="updateByPrimaryKey" parameterType="com.zom.common.dao.po.StaDayGroup">
	    UPDATE <include refid="table"/>
		<set>unique_id = #{uniqueId,jdbcType=VARCHAR},corpid = #{corpid,jdbcType=INTEGER},link_id = #{linkId,jdbcType=VARCHAR},time_ymd = #{timeYmd,jdbcType=INTEGER},dept_unique_id = #{deptUniqueId,jdbcType=VARCHAR},dept_name = #{deptName,jdbcType=VARCHAR},group_id = #{groupId,jdbcType=BIGINT},group_name = #{groupName,jdbcType=VARCHAR},talk_count = #{talkCount,jdbcType=INTEGER},talk_duration = #{talkDuration,jdbcType=INTEGER},video_count = #{videoCount,jdbcType=INTEGER},video_duration = #{videoDuration,jdbcType=INTEGER},im_count = #{imCount,jdbcType=INTEGER},state = #{state,jdbcType=INTEGER},update_time = #{updateTime,jdbcType=TIMESTAMP},</set>
	    WHERE id = #{id,jdbcType=BIGINT}
	</update>

	<update id="updateByPrimaryKeySelective" parameterType="com.zom.common.dao.po.StaDayGroup">
	    UPDATE <include refid="table"/>
		<set><if test="uniqueId != null">unique_id = #{uniqueId,jdbcType=VARCHAR},</if><if test="corpid != null">corpid = #{corpid,jdbcType=INTEGER},</if><if test="linkId != null">link_id = #{linkId,jdbcType=VARCHAR},</if><if test="timeYmd != null">time_ymd = #{timeYmd,jdbcType=INTEGER},</if><if test="deptUniqueId != null">dept_unique_id = #{deptUniqueId,jdbcType=VARCHAR},</if><if test="deptName != null">dept_name = #{deptName,jdbcType=VARCHAR},</if><if test="groupId != null">group_id = #{groupId,jdbcType=BIGINT},</if><if test="groupName != null">group_name = #{groupName,jdbcType=VARCHAR},</if><if test="talkCount != null">talk_count = #{talkCount,jdbcType=INTEGER},</if><if test="talkDuration != null">talk_duration = #{talkDuration,jdbcType=INTEGER},</if><if test="videoCount != null">video_count = #{videoCount,jdbcType=INTEGER},</if><if test="videoDuration != null">video_duration = #{videoDuration,jdbcType=INTEGER},</if><if test="imCount != null">im_count = #{imCount,jdbcType=INTEGER},</if><if test="state != null">state = #{state,jdbcType=INTEGER},</if><if test="updateTime != null">update_time = #{updateTime,jdbcType=TIMESTAMP},</if></set>
	    WHERE id = #{id,jdbcType=BIGINT}
	</update>
    <!--====================================== 修改结束-UPDATE_FINISH ======================================-->

	<!--====================================== 新增开始-INSERT_BEGIN ======================================-->
	<insert id="insert" parameterType="com.zom.common.dao.po.StaDayGroup" useGeneratedKeys="true" keyProperty="id">
	    INSERT INTO <include refid="table"/>(unique_id,corpid,link_id,time_ymd,dept_unique_id,dept_name,group_id,group_name,talk_count,talk_duration,video_count,video_duration,im_count,state,update_time)
	    VALUES( #{uniqueId,jdbcType=VARCHAR},#{corpid,jdbcType=INTEGER},#{linkId,jdbcType=VARCHAR},#{timeYmd,jdbcType=INTEGER},#{deptUniqueId,jdbcType=VARCHAR},#{deptName,jdbcType=VARCHAR},#{groupId,jdbcType=BIGINT},#{groupName,jdbcType=VARCHAR},#{talkCount,jdbcType=INTEGER},#{talkDuration,jdbcType=INTEGER},#{videoCount,jdbcType=INTEGER},#{videoDuration,jdbcType=INTEGER},#{imCount,jdbcType=INTEGER},#{state,jdbcType=INTEGER},#{updateTime,jdbcType=TIMESTAMP})
	</insert>

	<insert id="insertSelective" parameterType="com.zom.common.dao.po.StaDayGroup" useGeneratedKeys="true" keyProperty="id">
	    INSERT INTO <include refid="table"/>
		<trim prefix="(" suffix=")" suffixOverrides=","> <if test="uniqueId != null"> unique_id,</if><if test="corpid != null"> corpid,</if><if test="linkId != null"> link_id,</if><if test="timeYmd != null"> time_ymd,</if><if test="deptUniqueId != null"> dept_unique_id,</if><if test="deptName != null"> dept_name,</if><if test="groupId != null"> group_id,</if><if test="groupName != null"> group_name,</if><if test="talkCount != null"> talk_count,</if><if test="talkDuration != null"> talk_duration,</if><if test="videoCount != null"> video_count,</if><if test="videoDuration != null"> video_duration,</if><if test="imCount != null"> im_count,</if><if test="state != null"> state,</if><if test="updateTime != null"> update_time,</if></trim>
		<trim prefix="values (" suffix=")" suffixOverrides=","><if test="uniqueId != null">#{uniqueId,jdbcType=VARCHAR},</if><if test="corpid != null">#{corpid,jdbcType=INTEGER},</if><if test="linkId != null">#{linkId,jdbcType=VARCHAR},</if><if test="timeYmd != null">#{timeYmd,jdbcType=INTEGER},</if><if test="deptUniqueId != null">#{deptUniqueId,jdbcType=VARCHAR},</if><if test="deptName != null">#{deptName,jdbcType=VARCHAR},</if><if test="groupId != null">#{groupId,jdbcType=BIGINT},</if><if test="groupName != null">#{groupName,jdbcType=VARCHAR},</if><if test="talkCount != null">#{talkCount,jdbcType=INTEGER},</if><if test="talkDuration != null">#{talkDuration,jdbcType=INTEGER},</if><if test="videoCount != null">#{videoCount,jdbcType=INTEGER},</if><if test="videoDuration != null">#{videoDuration,jdbcType=INTEGER},</if><if test="imCount != null">#{imCount,jdbcType=INTEGER},</if><if test="state != null">#{state,jdbcType=INTEGER},</if><if test="updateTime != null">#{updateTime,jdbcType=TIMESTAMP},</if></trim>
	</insert>

	<insert id="insertBatch" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO <include refid="table"/>(unique_id,corpid,link_id,time_ymd,dept_unique_id,dept_name,group_id,group_name,talk_count,talk_duration,video_count,video_duration,im_count,state,update_time)
		VALUES <foreach collection="list" item="c" separator=",">(#{c.uniqueId,jdbcType=VARCHAR},#{c.corpid,jdbcType=INTEGER},#{c.linkId,jdbcType=VARCHAR},#{c.timeYmd,jdbcType=INTEGER},#{c.deptUniqueId,jdbcType=VARCHAR},#{c.deptName,jdbcType=VARCHAR},#{c.groupId,jdbcType=BIGINT},#{c.groupName,jdbcType=VARCHAR},#{c.talkCount,jdbcType=INTEGER},#{c.talkDuration,jdbcType=INTEGER},#{c.videoCount,jdbcType=INTEGER},#{c.videoDuration,jdbcType=INTEGER},#{c.imCount,jdbcType=INTEGER},#{c.state,jdbcType=INTEGER},#{c.updateTime,jdbcType=TIMESTAMP})</foreach>
	</insert>
  	<!--====================================== 新增结束-INSERT_FINISH ======================================-->

	<!--====================================== 删除开始-DELETE_BEGIN ======================================-->
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
	    DELETE FROM <include refid="table"/> WHERE id = #{id,jdbcType=BIGINT}
	</delete>
	<!--====================================== 删除结束-DELETE_FINISH ======================================-->

</mapper>