<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zom.common.dao.mapper.TechUserMapper">

	<!-- @author yuronghua-airson @template 2019.08.02 v11.0 @organization Zero One More, Inc. http://www.01more.com @time 2019-12-13 17:56:27 -->

	<!--====================================== 设置开始-CONFIG_BEGIN ======================================-->
	<sql id="table">tech_user</sql>
	<!-- 所有基础字段 -->
    <sql id="baseColumns">A.id AS id,A.user_name AS userName,A.real_name AS realName,A.phone AS phone,A.email AS email,A.id_card AS idCard,A.password AS password,A.state AS state,A.type AS type,A.rank AS rank,A.sex AS sex,A.create_time AS createTime,A.update_time AS updateTime,A.birthday AS birthday,A.province AS province,A.city AS city,A.address AS address,A.avatar AS avatar,A.qr_code AS qrCode,A.url AS url,A.introduction AS introduction</sql>
	<!-- 分组  -->
	<sql id="groupBy">
		<if test="groupBy != null and groupBy !='' "> GROUP BY ${groupBy,jdbcType=VARCHAR} </if>
	</sql>
	<!-- 排序  -->
	<sql id="orderBy">
		<if test="orderBy != null and orderBy !='' ">
			<if test="selfOrder == null">ORDER BY A.${orderBy}</if>
			<if test="selfOrder != null">ORDER BY ${orderBy}</if>
		</if>
		<if test="ascOrDesc != null and ascOrDesc !='' and selfOrder == null "> ${ascOrDesc}</if>
		<if test="orderBy == null and ascOrDesc == null "> ORDER BY A.id DESC</if>
	</sql>
	<!-- 分页 -->
	<sql id="limitCount">
		<if test="count != null and count !='' "> LIMIT ${start},${count}</if>
	</sql>
	<!--====================================== 设置结束-CONFIG_FINISH ======================================-->


	<!--=@@@@@@============================= 自定义内容 开始 _@CAUTION_SELF_BEGIN@_ =============================@@@@@@=-->
	<sql id="joinColumns"></sql>
	<sql id="baseSearch"></sql>
	<sql id="joinSearch"></sql>
	<sql id="leftJoin"></sql>
	<!--=@@@@@@============================= 自定义内容 结束 _@CAUTION_SELF_FINISH@_ =============================@@@@@@=-->


	<!--====================================== 查询开始-SELECT_BEGIN ======================================-->
	<select id="load" parameterType="java.lang.Long" resultType="com.zom.common.dao.po.TechUser">
		SELECT <include refid="baseColumns"/> FROM <include refid="table"/> A WHERE A.id = #{id,jdbcType=BIGINT}
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.Long" resultType="com.zom.common.dao.po.TechUser">
		SELECT <include refid="baseColumns"/> FROM <include refid="table"/> A WHERE A.id = #{id,jdbcType=BIGINT}
	</select>

	<select id="selectByCondition" parameterType="java.util.Map" resultType="com.zom.common.dao.po.TechUser">
    	SELECT <include refid="baseColumns"/> <include refid="joinColumns"/> FROM <include refid="table"/> A <include refid="leftJoin"/> <where> <include refid="baseSearch"/> <include refid="joinSearch"/> </where> <include refid="orderBy"/> LIMIT 0,1
	</select>

	<select id="selectListByCondition" parameterType="java.util.Map" resultType="com.zom.common.dao.po.TechUser">
    	SELECT <include refid="baseColumns"/> <include refid="joinColumns"/> FROM <include refid="table"/> A <include refid="leftJoin"/> <where> <include refid="baseSearch"/> <include refid="joinSearch"/> </where> <include refid="orderBy"/> <include refid="limitCount"/>
	</select>

	<select id="selectCountByCondition" parameterType="java.util.Map" resultType="long">
		SELECT COUNT(*) FROM <include refid="table"/> A <include refid="leftJoin"/> <where> <include refid="baseSearch"/> <include refid="joinSearch"/> </where>
	</select>
	<!--====================================== 查询结束-SELECT_FINISH ======================================-->

	<!--====================================== 修改开始-UPDATE_BEGIN ======================================-->
	<!-- <-#-if cMap_has_next>,</-#-if> -->
	<update id="updateByPrimaryKey" parameterType="com.zom.common.dao.po.TechUser">
	    UPDATE <include refid="table"/>
		<set>user_name = #{userName,jdbcType=VARCHAR},real_name = #{realName,jdbcType=VARCHAR},phone = #{phone,jdbcType=VARCHAR},email = #{email,jdbcType=VARCHAR},id_card = #{idCard,jdbcType=VARCHAR},password = #{password,jdbcType=VARCHAR},state = #{state,jdbcType=INTEGER},type = #{type,jdbcType=INTEGER},rank = #{rank,jdbcType=INTEGER},sex = #{sex,jdbcType=INTEGER},create_time = #{createTime,jdbcType=TIMESTAMP},update_time = #{updateTime,jdbcType=TIMESTAMP},birthday = #{birthday,jdbcType=TIMESTAMP},province = #{province,jdbcType=VARCHAR},city = #{city,jdbcType=VARCHAR},address = #{address,jdbcType=VARCHAR},avatar = #{avatar,jdbcType=VARCHAR},qr_code = #{qrCode,jdbcType=VARCHAR},url = #{url,jdbcType=VARCHAR},introduction = #{introduction,jdbcType=VARCHAR},</set>
	    WHERE id = #{id,jdbcType=BIGINT}
	</update>

	<update id="updateByPrimaryKeySelective" parameterType="com.zom.common.dao.po.TechUser">
	    UPDATE <include refid="table"/>
		<set><if test="userName != null">user_name = #{userName,jdbcType=VARCHAR},</if><if test="realName != null">real_name = #{realName,jdbcType=VARCHAR},</if><if test="phone != null">phone = #{phone,jdbcType=VARCHAR},</if><if test="email != null">email = #{email,jdbcType=VARCHAR},</if><if test="idCard != null">id_card = #{idCard,jdbcType=VARCHAR},</if><if test="password != null">password = #{password,jdbcType=VARCHAR},</if><if test="state != null">state = #{state,jdbcType=INTEGER},</if><if test="type != null">type = #{type,jdbcType=INTEGER},</if><if test="rank != null">rank = #{rank,jdbcType=INTEGER},</if><if test="sex != null">sex = #{sex,jdbcType=INTEGER},</if><if test="createTime != null">create_time = #{createTime,jdbcType=TIMESTAMP},</if><if test="updateTime != null">update_time = #{updateTime,jdbcType=TIMESTAMP},</if><if test="birthday != null">birthday = #{birthday,jdbcType=TIMESTAMP},</if><if test="province != null">province = #{province,jdbcType=VARCHAR},</if><if test="city != null">city = #{city,jdbcType=VARCHAR},</if><if test="address != null">address = #{address,jdbcType=VARCHAR},</if><if test="avatar != null">avatar = #{avatar,jdbcType=VARCHAR},</if><if test="qrCode != null">qr_code = #{qrCode,jdbcType=VARCHAR},</if><if test="url != null">url = #{url,jdbcType=VARCHAR},</if><if test="introduction != null">introduction = #{introduction,jdbcType=VARCHAR},</if></set>
	    WHERE id = #{id,jdbcType=BIGINT}
	</update>
    <!--====================================== 修改结束-UPDATE_FINISH ======================================-->

	<!--====================================== 新增开始-INSERT_BEGIN ======================================-->
	<insert id="insert" parameterType="com.zom.common.dao.po.TechUser" useGeneratedKeys="true" keyProperty="id">
	    INSERT INTO <include refid="table"/>(user_name,real_name,phone,email,id_card,password,state,type,rank,sex,create_time,update_time,birthday,province,city,address,avatar,qr_code,url,introduction)
	    VALUES( #{userName,jdbcType=VARCHAR},#{realName,jdbcType=VARCHAR},#{phone,jdbcType=VARCHAR},#{email,jdbcType=VARCHAR},#{idCard,jdbcType=VARCHAR},#{password,jdbcType=VARCHAR},#{state,jdbcType=INTEGER},#{type,jdbcType=INTEGER},#{rank,jdbcType=INTEGER},#{sex,jdbcType=INTEGER},#{createTime,jdbcType=TIMESTAMP},#{updateTime,jdbcType=TIMESTAMP},#{birthday,jdbcType=TIMESTAMP},#{province,jdbcType=VARCHAR},#{city,jdbcType=VARCHAR},#{address,jdbcType=VARCHAR},#{avatar,jdbcType=VARCHAR},#{qrCode,jdbcType=VARCHAR},#{url,jdbcType=VARCHAR},#{introduction,jdbcType=VARCHAR})
	</insert>

	<insert id="insertSelective" parameterType="com.zom.common.dao.po.TechUser" useGeneratedKeys="true" keyProperty="id">
	    INSERT INTO <include refid="table"/>
		<trim prefix="(" suffix=")" suffixOverrides=","> <if test="userName != null"> user_name,</if><if test="realName != null"> real_name,</if><if test="phone != null"> phone,</if><if test="email != null"> email,</if><if test="idCard != null"> id_card,</if><if test="password != null"> password,</if><if test="state != null"> state,</if><if test="type != null"> type,</if><if test="rank != null"> rank,</if><if test="sex != null"> sex,</if><if test="createTime != null"> create_time,</if><if test="updateTime != null"> update_time,</if><if test="birthday != null"> birthday,</if><if test="province != null"> province,</if><if test="city != null"> city,</if><if test="address != null"> address,</if><if test="avatar != null"> avatar,</if><if test="qrCode != null"> qr_code,</if><if test="url != null"> url,</if><if test="introduction != null"> introduction,</if></trim>
		<trim prefix="values (" suffix=")" suffixOverrides=","><if test="userName != null">#{userName,jdbcType=VARCHAR},</if><if test="realName != null">#{realName,jdbcType=VARCHAR},</if><if test="phone != null">#{phone,jdbcType=VARCHAR},</if><if test="email != null">#{email,jdbcType=VARCHAR},</if><if test="idCard != null">#{idCard,jdbcType=VARCHAR},</if><if test="password != null">#{password,jdbcType=VARCHAR},</if><if test="state != null">#{state,jdbcType=INTEGER},</if><if test="type != null">#{type,jdbcType=INTEGER},</if><if test="rank != null">#{rank,jdbcType=INTEGER},</if><if test="sex != null">#{sex,jdbcType=INTEGER},</if><if test="createTime != null">#{createTime,jdbcType=TIMESTAMP},</if><if test="updateTime != null">#{updateTime,jdbcType=TIMESTAMP},</if><if test="birthday != null">#{birthday,jdbcType=TIMESTAMP},</if><if test="province != null">#{province,jdbcType=VARCHAR},</if><if test="city != null">#{city,jdbcType=VARCHAR},</if><if test="address != null">#{address,jdbcType=VARCHAR},</if><if test="avatar != null">#{avatar,jdbcType=VARCHAR},</if><if test="qrCode != null">#{qrCode,jdbcType=VARCHAR},</if><if test="url != null">#{url,jdbcType=VARCHAR},</if><if test="introduction != null">#{introduction,jdbcType=VARCHAR},</if></trim>
	</insert>

	<insert id="insertBatch">
		INSERT INTO <include refid="table"/>(user_name,real_name,phone,email,id_card,password,state,type,rank,sex,create_time,update_time,birthday,province,city,address,avatar,qr_code,url,introduction)
		VALUES <foreach collection="list" item="c" separator=",">(#{c.userName,jdbcType=VARCHAR},#{c.realName,jdbcType=VARCHAR},#{c.phone,jdbcType=VARCHAR},#{c.email,jdbcType=VARCHAR},#{c.idCard,jdbcType=VARCHAR},#{c.password,jdbcType=VARCHAR},#{c.state,jdbcType=INTEGER},#{c.type,jdbcType=INTEGER},#{c.rank,jdbcType=INTEGER},#{c.sex,jdbcType=INTEGER},#{c.createTime,jdbcType=TIMESTAMP},#{c.updateTime,jdbcType=TIMESTAMP},#{c.birthday,jdbcType=TIMESTAMP},#{c.province,jdbcType=VARCHAR},#{c.city,jdbcType=VARCHAR},#{c.address,jdbcType=VARCHAR},#{c.avatar,jdbcType=VARCHAR},#{c.qrCode,jdbcType=VARCHAR},#{c.url,jdbcType=VARCHAR},#{c.introduction,jdbcType=VARCHAR})</foreach>
	</insert>
  	<!--====================================== 新增结束-INSERT_FINISH ======================================-->

	<!--====================================== 删除开始-DELETE_BEGIN ======================================-->
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
	    DELETE FROM <include refid="table"/> WHERE id = #{id,jdbcType=BIGINT}
	</delete>
	<!--====================================== 删除结束-DELETE_FINISH ======================================-->

</mapper>